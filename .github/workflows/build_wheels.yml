name: Build

on: [ push, pull_request, release ]

jobs:
  build_wheels:
    name: Build wheels on ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout imagedata_format_pdf
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python3 -m pip install -e .

      - name: Lint with flake8
        run: |
          pip install --upgrade pip flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Testing
        #          python3 -m pip install nipype
        #          python3 -m pip install -e .
        run: |
          python3 -m pip install numpy flake8 coverage imagedata
          python3 -m coverage run -m unittest discover tests -t .

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel
          pip install imagedata

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz


  publish-to-pypi:
    name: Publish Python distribution to PyPi
    # if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    # needs: [build_wheels, build_sdist]
    needs: [ build_wheels ]
    runs-on: ubuntu-latest
    environment:
      name: pypi
    permissions:
      contents: read
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - name: Upload distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
